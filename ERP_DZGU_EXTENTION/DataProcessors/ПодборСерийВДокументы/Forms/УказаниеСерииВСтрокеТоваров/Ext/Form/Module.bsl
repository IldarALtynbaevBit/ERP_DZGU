&НаСервере
&Вместо("ВыполнитьЗапросЗаполненияТаблицыОстатков")
Процедура Расш1_ВыполнитьЗапросЗаполненияТаблицыОстатков()
    ТекстЗапроса = Обработки.ПодборСерийВДокументы.ТекстЗапросаФормированияТаблицыДанныеРегистров(ВариантПолучениеДанныхИзРегистров, Склад);

    ТекстЗапроса = ТекстЗапроса + "
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |";

    ТекстЗапроса = ТекстЗапроса + 
    "ВЫБРАТЬ
    |	ДанныеРегистров.Серия КАК Серия,
    |	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).Номер КАК Номер,
    |	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).ГоденДо КАК ГоденДо,
    |	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).НомерКиЗГИСМ КАК НомерКиЗГИСМ,
    |	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).ДатаПроизводства КАК ДатаПроизводства,
    |	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).ПроизводительЕГАИС КАК ПроизводительЕГАИС,
    |	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).Справка2ЕГАИС КАК Справка2ЕГАИС,
    |	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).ПроизводительВЕТИС КАК ПроизводительВЕТИС,
    |	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).ЗаписьСкладскогоЖурналаВЕТИС КАК ЗаписьСкладскогоЖурналаВЕТИС,
    |	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).ИдентификаторПартииВЕТИС КАК ИдентификаторПартииВЕТИС,
    |	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).МаксимальнаяРозничнаяЦенаМОТП КАК МаксимальнаяРозничнаяЦенаМОТП,
    |	ДанныеРегистров.СвободныйОстаток КАК СвободныйОстаток
    // {{ ДОБАВЛЕНО: OSBurangulova@1cbit.ru, Kuban@1cbit.ru, 12.11.2020 13:27:
    |ПОМЕСТИТЬ ВТ_Итоговая
    // }} ДОБАВЛЕНО 
    |ИЗ
    |	ДанныеРегистров КАК ДанныеРегистров
    |ГДЕ
    |	ДанныеРегистров.СвободныйОстаток > 0
    |	ИЛИ &ВсеСерии
    |
     //{{ УДАЛЕНО: OSBurangulova@1cbit.ru, Kuban@1cbit.ru, 12.11.2020 13:28:
    // |УПОРЯДОЧИТЬ ПО
    // |	ГоденДо,
    // |	Номер,
    // |	НомерКиЗГИСМ";
    // }} УДАЛЕНО 
    // {{ ДОБАВЛЕНО: OSBurangulova@1cbit.ru, Kuban@1cbit.ru, 12.11.2020 13:28:
    |";
    ТекстЗапроса = ТекстЗапроса + "
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |";
    
    ТекстЗапроса = ТекстЗапроса + 
    "ВЫБРАТЬ
    |   БИТ_КарантинОстатки.Серия КАК Серия,
    |   БИТ_КарантинОстатки.КоличествоОстаток КАК КоличествоОстаток
    |ПОМЕСТИТЬ ВТ_Карантин
    |ИЗ
    |   РегистрНакопления.БИТ_Карантин.Остатки(
    |           &Дата,
    |           Номенклатура = &Номенклатура
    |               И Склад = &Склад) КАК БИТ_КарантинОстатки
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |   БИТ_СертификацияОстаткиОстатки.Серия КАК Серия,
    |   БИТ_СертификацияОстаткиОстатки.КоличествоОстаток КАК КоличествоОстаток
    |ПОМЕСТИТЬ ВТ_Сертификация
    |ИЗ
    |   РегистрНакопления.БИТ_СертификацияОстатки.Остатки(
    |           &Дата,
    |           Номенклатура = &Номенклатура
    |               И Склад = &Склад) КАК БИТ_СертификацияОстаткиОстатки
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |   БИТ_ОтказСертификацииОстатки.Серия КАК Серия,
    |   БИТ_ОтказСертификацииОстатки.КоличествоОстаток КАК КоличествоОстаток
    |ПОМЕСТИТЬ ВТ_Отказ
    |ИЗ
    |   РегистрНакопления.БИТ_ОтказСертификации.Остатки(
    |           &Дата,
    |           Номенклатура = &Номенклатура
    |               И Склад = &Склад) КАК БИТ_ОтказСертификацииОстатки
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |   ВТ_Итоговая.Серия КАК Серия,
    |   ВТ_Итоговая.Номер КАК Номер,
    |   ВТ_Итоговая.ГоденДо КАК ГоденДо,
    |   ВТ_Итоговая.НомерКиЗГИСМ КАК НомерКиЗГИСМ,
    |   ВТ_Итоговая.ДатаПроизводства КАК ДатаПроизводства,
    |   ВТ_Итоговая.ПроизводительЕГАИС КАК ПроизводительЕГАИС,
    |   ВТ_Итоговая.Справка2ЕГАИС КАК Справка2ЕГАИС,
    |   ВТ_Итоговая.ПроизводительВЕТИС КАК ПроизводительВЕТИС,
    |   ВТ_Итоговая.ЗаписьСкладскогоЖурналаВЕТИС КАК ЗаписьСкладскогоЖурналаВЕТИС,
    |   ВТ_Итоговая.ИдентификаторПартииВЕТИС КАК ИдентификаторПартииВЕТИС,
    |   ВТ_Итоговая.МаксимальнаяРозничнаяЦенаМОТП КАК МаксимальнаяРозничнаяЦенаМОТП,
    |   ВТ_Итоговая.СвободныйОстаток КАК СвободныйОстаток,
    |   ЕСТЬNULL(ВТ_Карантин.КоличествоОстаток, 0) КАК Карантин,
    |   ЕСТЬNULL(ВТ_Отказ.КоличествоОстаток, 0) КАК Отказ,
    |   ЕСТЬNULL(ВТ_Сертификация.КоличествоОстаток, 0) КАК Сертификация
    |ИЗ
    |   ВТ_Итоговая КАК ВТ_Итоговая
    |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Карантин КАК ВТ_Карантин
    |       ПО ВТ_Итоговая.Серия = ВТ_Карантин.Серия
    |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сертификация КАК ВТ_Сертификация
    |       ПО ВТ_Итоговая.Серия = ВТ_Сертификация.Серия
    |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Отказ КАК ВТ_Отказ
    |       ПО ВТ_Итоговая.Серия = ВТ_Отказ.Серия";
    
    // }} ДОБАВЛЕНО 
    Запрос = Новый Запрос;
    Запрос.Текст = ТекстЗапроса;
    Для Каждого Параметр Из ПараметрыЗапроса Цикл
        Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
    КонецЦикла;

    Если ВариантПолучениеДанныхИзРегистров <> "ВсеСерииНоменклатуры" Тогда
        Запрос.УстановитьПараметр("ВсеСерии", РежимОтображенияСерий = "ВсеСерии");
    Иначе
        Запрос.УстановитьПараметр("ВсеСерии", Истина);
    КонецЕсли;
     Запрос.УстановитьПараметр("Дата",ПараметрыЗапроса.Регистратор.Дата);
    ОстаткиСерий.Загрузить(Запрос.Выполнить().Выгрузить());

    КоличествоСерий = ОстаткиСерий.Количество();

    // Доп. реквизиты
    УправлениеСвойствамиУТ.ДобавитьКолонкиДополнительныхРеквизитов(
    Обработки.ПодборСерийВДокументы.ВладелецСвойствСерий(ВидНоменклатуры),
    ЭтаФорма,
    "ОстаткиСерий",
    "ОстаткиСерий",
    "ОстаткиСерийСвободныйОстаток",
    Истина);
    УправлениеСвойствамиУТ.ЗаполнитьКолонкиДополнительныхРеквизитов(
    ЭтаФорма,
    "ОстаткиСерий",
    "Серия");
КонецПроцедуры

&НаСервере
Процедура Расш1_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
    
    УстановитьУсловноеОформление();
    //Добавляем на форму колонку сертифкация
    ТипыРеквизита = Новый Массив;
    ТипыРеквизита.Добавить(Тип("Число"));
    ОписаниеТиповДляРеквизита = Новый ОписаниеТипов(ТипыРеквизита);
    НовыйРеквизит = Новый РеквизитФормы("Сертификация", ОписаниеТиповДляРеквизита, "ОстаткиСерий", 
    "Сертификация",Истина);        
    
    ДобавляемыеРеквизиты = Новый Массив;
    ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
    ИзменитьРеквизиты(ДобавляемыеРеквизиты);
    
    НовыйЭлемент = Элементы.Добавить("Сертификация", Тип("ПолеФормы"), Элементы.ОстаткиСерий);  
    НовыйЭлемент.ПутьКДанным = "ОстаткиСерий.Сертификация";
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;

    //Добавляем на форму колонку Карантин
    ТипыРеквизита = Новый Массив;
    ТипыРеквизита.Добавить(Тип("Число"));
    ОписаниеТиповДляРеквизита = Новый ОписаниеТипов(ТипыРеквизита);
    НовыйРеквизит = Новый РеквизитФормы("Карантин", ОписаниеТиповДляРеквизита, "ОстаткиСерий", 
    "Карантин",Истина);        
    
    ДобавляемыеРеквизиты = Новый Массив;
    ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
    ИзменитьРеквизиты(ДобавляемыеРеквизиты);
    
    НовыйЭлемент = Элементы.Добавить("Карантин", Тип("ПолеФормы"), Элементы.ОстаткиСерий);  
    НовыйЭлемент.ПутьКДанным = "ОстаткиСерий.Карантин";
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
    
    //Добавляем на форму колонку Отказ
    ТипыРеквизита = Новый Массив;
    ТипыРеквизита.Добавить(Тип("Число"));
    ОписаниеТиповДляРеквизита = Новый ОписаниеТипов(ТипыРеквизита);
    НовыйРеквизит = Новый РеквизитФормы("Отказ", ОписаниеТиповДляРеквизита, "ОстаткиСерий", 
    "Отказ",Истина);        
    
    ДобавляемыеРеквизиты = Новый Массив;
    ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
    ИзменитьРеквизиты(ДобавляемыеРеквизиты);
    
    НовыйЭлемент = Элементы.Добавить("Отказ", Тип("ПолеФормы"), Элементы.ОстаткиСерий);  
    НовыйЭлемент.ПутьКДанным = "ОстаткиСерий.Отказ";
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	АртикулНоменклатуры = Параметры.Номенклатура.Артикул;
    
КонецПроцедуры
&НаСервере
Процедура УстановитьУсловноеОформление()
    Элементы.ОстаткиСерий.ЧередованиеЦветовСтрок = Ложь;
    Элемент = УсловноеОформление.Элементы.Добавить();
    
    ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
    ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОстаткиСерий.Имя);

    ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОстаткиСерий.СвободныйОстаток");
    ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
    ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("ОстаткиСерий.Сертификация");

    Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона",WebЦвета.Розовый);
	
Конецпроцедуры


&НаСервере
&Вместо("СгенерироватьНомерСервер")
Процедура Расш1_СгенерироватьНомерСервер()
	ГодВыпуска = Сред(Строка(Год(ТекущаяДата())),4,2);
	МесяцВыпуска = Формат(Месяц(ТекущаяДата()),"ЧЦ=2; ЧВН=");
	ПартияВыпуска = Формат(НомерПартии, "ЧЦ=3; ЧВН="); 
	Номер = ГодВыпуска+МесяцВыпуска+ПартияВыпуска+"_"+АртикулНоменклатуры;
	Серия = Справочники.СерииНоменклатуры.ПустаяСсылка();
	УстановитьЗаголовокДекорацииСерия();

КонецПроцедуры


&НаКлиенте
&Вместо("ЗаполнитьГоденДоПоДатеПроизводства")
Процедура Расш1_ЗаполнитьГоденДоПоДатеПроизводства()
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		
		НовыйГоденДо = НоменклатураКлиентСервер.ГоденДоПоДатеПроизводства(ДатаПроизводства, СрокГодности, ЕдиницаИзмеренияСрокаГодности);
		
		Если ЗначениеЗаполнено(НовыйГоденДо)
			И (Не ЗначениеЗаполнено(ГоденДо)
				Или ГоденДо = НоменклатураКлиентСервер.ГоденДоПоДатеПроизводства(ТекущаяДатаПроизводства, СрокГодности, ЕдиницаИзмеренияСрокаГодности)) Тогда
				Если ВидНоменклатуры = ВидГП() Тогда
					Месяцев = СрокГодности-1;
					ГоденДо = ДобавитьМесяц(ДатаПроизводства,Месяцев); 
				Иначе 
					ГоденДо = НовыйГоденДо;
				КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	НайтиСерию();
	УстановитьЗаголовокДекорацииСерия();
	
	ТекущаяДатаПроизводства = ДатаПроизводства;

КонецПроцедуры

&НаСервере
Функция ВидГП()
	Возврат Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Готовая продукция");
КонецФункции